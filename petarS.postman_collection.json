{
	"info": {
		"_postman_id": "84f81929-91cc-4d10-8091-6fcd95a195bd",
		"name": "Petar S New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24455597"
	},
	"item": [
		{
			"name": "za davida",
			"item": [
				{
					"name": "testovi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Provera parametra 'q' u params delu zahteva\", function () {\r",
									"    pm.expect(pm.request.url.query.has(\"q\")).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti parametra 'q'\", function () {\r",
									"    var qParamValue = pm.request.url.query.get(\"q\");\r",
									"    pm.expect(qParamValue).to.include(\"Obrenovac\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera parametra 'apikey' u params delu zahteva\", function () {\r",
									"    pm.expect(pm.request.url.query.has(\"apikey\")).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti parametra 'apikey'\", function () {\r",
									"    var apikeyParamValue = pm.request.url.query.get(\"apikey\");\r",
									"    pm.expect(apikeyParamValue).to.contain(\"3P29iJLSrPFEzo9UVbkEaA4u8nvOTLWI\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti parametra 'apikey'\", function () {\r",
									"    var apikeyParamValue = pm.request.url.query.get(\"apikey\");\r",
									"    pm.expect(apikeyParamValue).not.to.contain(\"nesto123\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"    pm.expect(pm.response.headers.has(\"Connection\")).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"   var connectionValue = pm.response.headers.get(\"Connection\");\r",
									"   pm.expect(connectionValue).to.eql(\"keep-alive\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"    var connectionValue = pm.response.headers.get(\"Connection\");\r",
									"    pm.expect(connectionValue).not.to.eql(\"test123\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Accept-Encoding' u headers delu\", function () {\r",
									"    pm.expect(pm.response.headers.has(\"Accept-Encoding\")).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da 'Accept-Encoding' sadrÅ¾i 'gzip, deflate, br'\", function () {\r",
									"    var acceptEncodingValue = pm.response.headers.get(\"Accept-Encoding\");\r",
									"    pm.expect(acceptEncodingValue).not.to.eql(\"!#%1241\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera statusnog koda 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da statusni kod nije 201\", function () {\r",
									"    pm.expect(pm.response.code).to.not.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera imena status koda OK\", () => {\r",
									"  pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da je Response time manji 2000ms\", () => {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da body responsa sadrzi vrednost 'type'\", function () {\r",
									"    const responseBody = pm.response.json()[0];\r",
									"    pm.expect(responseBody).to.include.property('Type');\r",
									"});\r",
									"\r",
									"pm.test(\"Provera LocalizedName parametra\", function () {\r",
									"    var responseBody = pm.response.json()[0];\r",
									"    pm.expect(responseBody).to.have.property(\"LocalizedName\");\r",
									"    pm.expect(responseBody.LocalizedName).to.eql(\"Obrenovac\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera LocalizedName parametra\", function () {\r",
									"    var responseBody = pm.response.json()[0];\r",
									"    pm.expect(responseBody).to.have.property(\"LocalizedName\");\r",
									"    pm.expect(responseBody.LocalizedName).not.to.eql(\"New York\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da svojstvo 'ID' ima vrednost 'RS'\", function () {\r",
									"    var responseBody = pm.response.json()[0];\r",
									"    pm.expect(responseBody).to.have.property(\"Country\");\r",
									"    pm.expect(responseBody.Country).to.have.property(\"ID\");\r",
									"    pm.expect(responseBody.Country.ID).to.eql(\"RS\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da svojstvo 'ID' ima vrednost 'RS'\", function () {\r",
									"    var responseBody = pm.response.json()[0];\r",
									"    pm.expect(responseBody).to.have.property(\"Country\");\r",
									"    pm.expect(responseBody.Country).to.have.property(\"ID\");\r",
									"    pm.expect(responseBody.Country.ID).not.to.eql(\"USA\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera metode (GET)\", function () {\r",
									"    pm.expect(pm.request.method).to.eql(\"GET\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera metode\", function () {\r",
									"    pm.expect(pm.request.method).not.to.eql(\"POST\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/search?apikey=3P29iJLSrPFEzo9UVbkEaA4u8nvOTLWI&q=Obrenovac",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"search"
							],
							"query": [
								{
									"key": "apikey",
									"value": "3P29iJLSrPFEzo9UVbkEaA4u8nvOTLWI"
								},
								{
									"key": "q",
									"value": "Obrenovac"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jokic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Provera statusnog koda 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da statusni kod nije 201\", function () {\r",
									"    pm.expect(pm.response.code).to.not.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera imena status koda OK\", () => {\r",
									"  pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera da je Response time manji 2000ms\", () => {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"    pm.expect(pm.response.headers.has(\"Connection\")).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"   var connectionValue = pm.response.headers.get(\"Connection\");\r",
									"   pm.expect(connectionValue).to.eql(\"keep-alive\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'Connection' u headers delu\", function () {\r",
									"    var connectionValue = pm.response.headers.get(\"Connection\");\r",
									"    pm.expect(connectionValue).not.to.eql(\"test123\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'x-rapidapi-key' u headers delu\", function () {\r",
									"   var xRapidKey = pm.response.headers.get(\"x-rapidapi-key\");\r",
									"   pm.expect(xRapidKey).not.to.eql(\"provera\");\r",
									"});\r",
									"\r",
									"pm.test(\"Provera vrednosti 'x-rapidapi-host' u headers delu\", function () {\r",
									"   var xRapidHost = pm.response.headers.get(\"x-rapidapi-host\");\r",
									"   pm.expect(xRapidHost).not.to.eql(\" https://test123\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true,
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rapidapi-host",
								"value": " https://v2.nba.api-sports.io/",
								"type": "text"
							},
							{
								"key": "x-rapidapi-key",
								"value": "f0cf61ba1f3ccf229017f0bd6c99de2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://v2.nba.api-sports.io/players?name=Jokic",
							"protocol": "https",
							"host": [
								"v2",
								"nba",
								"api-sports",
								"io"
							],
							"path": [
								"players"
							],
							"query": [
								{
									"key": "name",
									"value": "Jokic"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "acw_url",
			"value": "https://www.accuweather.com/",
			"type": "string",
			"disabled": true
		},
		{
			"key": "baseUrl",
			"value": "https://simple-books-api.glitch.me",
			"type": "string",
			"disabled": true
		},
		{
			"key": "accessToken",
			"value": "dda388f5e5ea9fa9366a2a57bf706c1968ac5fd22b5eb36d372a762d0e3ffde7",
			"type": "string"
		}
	]
}